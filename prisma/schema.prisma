generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Mbti {
    INTJ
    INTP
    ENTJ
    ENTP
    INFJ
    INFP
    ENFJ
    ENFP
    ISTJ
    ISFJ
    ESTJ
    ESFJ
    ISTP
    ISFP
    ESTP
    ESFP
}

enum RelationshipStatus {
    None
    Pending
    Dating
}

enum ApplicationStatus {
    None
    Pending
    Rejected
    Accepted
}

enum ImageType {
    PDF 
    PNG 
    Other
}

enum SocialType {
    Instagram
    Facebook
    Github
    Discord
}

model UserProfile {
    UserID Int @id 
    Name String
    DateOfBirth String
    Gender String
    SexualOrientation String
    Height Int
    School String
    YearAndMajor String
    Location String
    CurrentStudyTerm String
    Mbti Mbti
    Tags String 
    PhoneNumber String
    Discord String 
    Instagram String
    PersonalDescription String 
    RelationshipStyle String 
    BenefitsAndCompensation String 
    Interests String 
    DealBreakers String 
    DesiredTraits String
    accountCreatedDate DateTime
    @@index([UserID])
}

model Documents {
    documentID Int @id @default(autoincrement())
    userID Int
    link String
}

model Images {
    imageOwnerID Int 
    imageType ImageType
    imageLink String
    @@unique([imageOwnerID, imageType, imageLink])
}

model Applications {
    applicantID Int
    receiverID Int
    resume String
    coverLetter String
    letterOfRecommendation String
    applicationStatus ApplicationStatus
    @@unique([applicantID, receiverID])
}

model Relationship {
    userOneID Int
    userTwoID Int
    relationshipStatus RelationshipStatus @default(None)
    @@unique([userOneID, userTwoID])
}

model Socials {
    userId Int
    socialType SocialType
    socialLink String
    @@unique([userId, socialType])
}

model Notifications {
    receiverID Int
    notificationID Int @id @default(autoincrement())
    title String
    message String 
    timeCreated DateTime
    status Boolean
}