generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model UserProfile {
  genderIdentity          String
  height                  Int
  accountCreatedDate      DateTime
  cityOfResidence         String
  dateOfBirth             DateTime
  firstName               String
  lastName                String
  nextTerm1               String
  nextTerm2               String
  nextTerm3               String
  provinceOfResidence     String
  sexuality               String
  userID                  Int              @id
  preferredGender         String
  projectedGraduationDate DateTime
  mbti                    Mbti

  @@index([userID])
}

model Documents {
  documentID Int    @id @default(autoincrement())
  link       String
  userID     Int
}

model Images {
  imageLink    String
  imageOwnerID Int
  imageType    Images_imageType

  @@unique([imageOwnerID, imageType, imageLink])
}

model Applications {
  resume                 String
  coverLetter            String
  applicationStatus      Applications_applicationStatus @default(None)
  applicantID            Int
  letterOfRecommendation String
  receiverID             Int
  rankBackward           Int
  rankFoward             Int

  @@unique([applicantID, receiverID])
}

model Relationship {
  userOneID          Int
  userTwoID          Int
  relationshipStatus Relationship_relationshipStatus @default(None)

  @@unique([userOneID, userTwoID])
}

model Socials {
  userId     Int
  socialType Socials_socialType
  socialLink String

  @@unique([userId, socialType])
}

model Notifications {
  receiverID     Int
  notificationID Int      @id @default(autoincrement())
  title          String
  message        String
  timeCreated    DateTime
  status         Boolean
}

enum Socials_socialType {
  Instagram
  Facebook
  Github
  Discord
}

enum Images_imageType {
  PDF
  PNG
  Other
}

enum Applications_applicationStatus {
  None
  Pending
  Rejected
  Accepted
}

enum Relationship_relationshipStatus {
  None
  Pending
  Dating
}

enum Mbti {
  INTJ
  INTP
  ENTJ
  ENTP
  INFJ
  INFP
  ENFJ
  ENFP
  ISTJ
  ISFJ
  ESTJ
  ESFJ
  ISTP
  ISFP
  ESTP
  ESFP
}
